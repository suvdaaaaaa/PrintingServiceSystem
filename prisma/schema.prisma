// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id     Int      @id @default(autoincrement())
  fname       String   @db.VarChar(255)
  lname       String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  phone       String   @unique @db.VarChar(20)
  password    String   @db.VarChar(255)
  address     String?  @db.Text
  role        Int
  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt

  userrole User_role @relation(fields: [role], references: [user_role_id])
  orders Order[]
  material Material[]
}

model User_role {
  user_role_id     Int     @id @default(autoincrement())
  role_name       String   @db.VarChar(255)

  user User[]
  
}

model Order {
  order_id    Int      @id @default(autoincrement())
  user_id     Int
  order_date  DateTime @db.Date
  total_price Float
  createdDate DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id])
  order_detail OrderDetail[]
  payment Payment[]

}

model OrderDetail {
  order_detail_id Int      @id @default(autoincrement())
  order_id        Int
  material_id     Int
  quantity        Int
  side            Int
  paper_type      Int
  description     String?  @db.Text
  delivery_type   Int
  unit_price      Float
  createdDate     DateTime @default(now())

  order Order @relation(fields: [order_id], references: [order_id])
  material Material @relation(fields: [material_id], references: [material_id])
  papertype Paper_type @relation(fields: [paper_type], references: [paper_type_id])
  deliverytype Delivery_type @relation(fields: [delivery_type], references: [delivery_type_id])

}

model Paper_type {
  paper_type_id   Int      @id @default(autoincrement()) 
  paper_type_name String   @db.VarChar(255)

  order_detail OrderDetail[]

}

model Delivery_type {
  delivery_type_id   Int      @id @default(autoincrement()) 
  delivery_type_name String   @db.VarChar(255)

  order_detail OrderDetail[]

}

model Material {
  material_id     Int      @id @default(autoincrement())
  user_id         Int
  template_type   Int
  template_id     Int
  file_name       String   @db.VarChar(50)
  file_url        String   @db.Text
  material_object Json
  createdDate     DateTime @default(now())

  user User @relation(fields: [user_id], references: [user_id])
  template Templates @relation(fields: [template_id], references: [template_id])
  templatetype Template_type @relation(fields: [template_type], references: [template_type_id])
  order_detail OrderDetail[]

}

model Template_type {
  template_type_id   Int      @id @default(autoincrement()) 
  template_type_name String   @db.VarChar(255)

  material Material[]

}

model Templates {
  template_id    Int      @id @default(autoincrement())
  template_name  String   @unique @db.VarChar(50)
  price          Float
  design_object  Json
  createdDate    DateTime @default(now())
  updatedDate    DateTime @updatedAt

  material Material[]
}

model Payment {
  payment_id      Int      @id @default(autoincrement())
  order_id        Int
  payment_method  Int
  payment_date    DateTime @db.Date
  amount          Float
  status          Int
  createdDate     DateTime @default(now())

  order Order @relation(fields: [order_id], references: [order_id])

}